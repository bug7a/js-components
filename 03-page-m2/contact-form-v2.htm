<!DOCTYPE html>
<html lang="en">
    <head>
        
        <title>Contact Form</title>
        
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0"><!-- , user-scalable=no -->

        <!-- LIBRARY FILES -->
        <!-- <link rel="preload" href="image.png" as="image"> -->
        <link rel="preload" href="../basic/font/open-sans/OpenSans-Regular.ttf" as="font" crossorigin="anonymous">
        <link rel="preload" href="../basic/font/open-sans/OpenSans-Bold.ttf" as="font" crossorigin="anonymous">
        <link rel="stylesheet" type="text/css" href="../basic/basic.min.css">
        <script src="../basic/basic.min.js" type="text/javascript" charset="utf-8"></script>
        <script src="../basic/scroll-bar.min.js" type="text/javascript" charset="utf-8"></script>

        <script src="../comp-m2/tooltip.min.js" type="text/javascript" charset="utf-8"></script>
        <script src="../comp-m2/input-b.min.js" type="text/javascript" charset="utf-8"></script>
        <script src="../comp-m2/email-input-b.min.js" type="text/javascript" charset="utf-8"></script>
        <script src="../comp-m2/phone-input-b.min.js" type="text/javascript" charset="utf-8"></script>
        <script src="../comp-m2/textarea-b.min.js" type="text/javascript" charset="utf-8"></script>

        <script src="../comp-m2/waiting.min.js" type="text/javascript" charset="utf-8"></script>
        <script src="../comp-m2/form.js" type="text/javascript" charset="utf-8"></script>

        <!-- ALL COMPONENTS IN ONE FILE -->
        <!-- <script src="components.js" type="text/javascript" charset="utf-8"></script> -->

        <script>

        /*
        - kağıt uçak hareketle büyüyüp-küçülsün
        */

        // *** CONSTANTS:   
        const MAX_WIDTH = 700; 
        const MIN_WIDTH = 500; 
        const BACKGROUND_COLOR = "white";
        const FORM_TITLE = "Get in Touch";
        const FORM_DESCRIPTION = "Feel free to share any questions, suggestions, or feedback with us. Fill out the form and we’ll get back to you as soon as possible.";
        const SERVICE_URL = "https://api.ornekadres.com/gonder";

        // *** VARIABLES:          
        let firstNameInput, lastNameInput, emailInput, phoneInput, subjectInput, messageTextarea, formBtn;
        let scrollableBox, formContainer, nameGroup;
        let warningLabel, sentMessageBox, lblSentMessage;

        const inputList = [];

        // First running function.
        window.onload = function() {

            page.color = BACKGROUND_COLOR;

            // Scrollable page container
            scrollableBox = startBox(0, 0, "100%", "100%", {
                scrollY: 1,
                color: "transparent",
            });

                // Form container 
                formContainer = startBox(0, 0, {
                    height: "auto",
                    width: "100%",
                    color: "transparent",
                });
                that.elem.style.minWidth = MIN_WIDTH + "px";
                that.elem.style.maxWidth = MAX_WIDTH + "px";

                    // GROUP: Form Items
                    AutoLayout({
                        flow: "vertical",
                        align: "top center",
                        gap: 20,
                        padding: [40, 40],
                        height: "auto",
                        position: "relative", // Because formContainer.height = "auto"
                    });

                        // GROUP: Title, Description
                        AutoLayout({
                            flow: "vertical",
                            align: "left top",
                            gap: 0,
                            width: "100%",
                            height: "auto",
                        });

                            // LABEL: Title
                            Label({
                                text: FORM_TITLE,
                                textColor: "#373836",
                                fontSize: 26,
                            });
                            that.elem.style.fontFamily = "opensans-bold";

                            // LABEL: Description
                            Label({
                                text: FORM_DESCRIPTION,
                                fontSize: 16,
                                textColor: "#999999",
                            });
                            that.elem.style.fontStyle = "italic";

                        endAutoLayout(); // GROUP: Title, Description
                        that.elem.style.marginBottom = "20px";

                        // GROUP: First Name, Last Name
                        nameGroup = AutoLayout({
                            flow: "horizontal",
                            gap: 20,
                            width: "100%",
                            height: "auto",
                        });

                            // INPUT: First Name
                            firstNameInput = InputB({
                                key: "1",
                                isRequired: 1,
                                titleText: "FIRST NAME",
                                placeholder: "Emily",
                                leftPadding: 20,
                                width: "100%"
                            });
                            inputList.push(that);

                            // INPUT: Last Name
                            lastNameInput = InputB({
                                key: "2",
                                isRequired: 0,
                                titleText: "LAST NAME",
                                placeholder: "Brown",
                                leftPadding: 20,
                                width: "100%"
                            });
                            inputList.push(that);

                        endAutoLayout(); // GROUP: First Name, Last Name

                        // INPUT: Email
                        emailInput = EmailInputB({
                            key: "3",
                            isRequired: 1,
                            titleText: "YOUR EMAIL",
                            placeholder: "example@site.com",
                            warningText: "Invalid email format",
                            warningColor: "#E5885E", // "#F1BF3C"
                            maxChar: 35,
                            width: "100%"
                        });
                        inputList.push(that);

                        // INPUT: Phone
                        
                        phoneInput = PhoneInputB({
                            key: "4",
                            isRequired: 1,
                            titleText: "PHONE NUMBER",
                            placeholder: "(auto)",
                            warningText: "Invalid phone number format",
                            warningColor: "#E5885E", // "#F1BF3C"
                            countryCode: "+90",
                            phoneMask: " (___) ___-____",
                            unitText: "TR",
                            width: "100%"
                            //animatedWarningBall: 0,
                        });
                        inputList.push(that);
                        

                        // INPUT: Subject
                        subjectInput = InputB({
                            key: "5",
                            titleText: "SUBJECT",
                            placeholder: "What's your message about?",
                            descriptionText: "",
                            isRequired: 0,
                            width: "100%"
                        });
                        inputList.push(that);

                        // INPUT: Textarea
                        messageTextarea = TextareaB({
                            key: "6",
                            isRequired: 1,
                            width: "100%",
                            titleText: "MESSAGE",
                            placeholder: "How can we help you?",
                            minCharCount: 80, // 80, 0
                            showCount: 1, // 1, 0
                            lengthText: "length: ",
                            warningText: "The entered text must be longer than 80",
                            warningColor: "#E5885E", // "#F1BF3C"
                            maxChar: 255,
                            height: 170, // 170 (4line)
                            rightPadding: 5,
                            unitStyle: {
                                padding: [12, 4],
                                color: "#373836EE",
                                textColor: "white",
                            },
                        });
                        inputList.push(that);

                        // GROUP: Form send button
                        AutoLayout({
                            width: "100%",
                            height: "auto",
                            clipContent: 0,
                        });
                        that.elem.style.marginTop = "20px";

                            // BUTTON: Send Button
                            formBtn = Button({
                                width: "100%",
                                text: "SEND",
                                color: "#65A293",
                            });
                            actionButtonEffect(that);
                            that.on("mousedown", function() {
                                
                                // FORM CHECKED AND READY:

                                // Lock the form
                                waiting.show();

                                // create json
                                const formJSON = createJSON();
                                console.table(formJSON);

                                // send json to service url and show sent message
                                /*
                                sendData(formJSON, function success() {
                                    lblSentMessage.text = "Data sent successfully."
                                    sentMessageBox.visible = 1;
                                    waiting.hide();
                                }, function fail() {
                                    lblSentMessage.text = "Data could not be sent."
                                    sentMessageBox.visible = 1;
                                    waiting.hide();
                                });
                                 */

                            });
                            formBtn.clickable = 0; // that.on("mousedown" set formBtn.clickable = 1
                            formBtn.elem.style.filter = "grayscale(100%)";

                            // LABEL: warningLabel
                            warningLabel = Label({
                                text: "2 Warnings",
                                textColor: "#373836",
                                color: "#F1C74A",
                                padding: [8, 2],
                                position: "absolute",
                                fontSize: 14,
                                round: 4,
                                border: 1,
                                opacity: 0,
                            });
                            that.setMotion("opacity 0.2s");
                            warningLabel.left = formBtn.left + 5;
                            warningLabel.top = formBtn.top + 5;

                            // LABEL: warningDetailLabel
                            warningDetailLabel = Label({
                                text: "",
                                textColor: "#373836",
                                color: "whitesmoke",
                                padding: [8, 2],
                                position: "absolute",
                                fontSize: 12,
                                round: 4,
                                border: 1,
                                opacity: 0,
                            });
                            that.elem.style.transform = "scale(0.7)";
                            that.setMotion("opacity 0.2s, transform 0.2s");

                            // Show warningDetailLabel
                            warningLabel.on("mouseover", function() {
                                warningDetailLabel.opacity = 1;
                                warningDetailLabel.aline(warningLabel, "top", 8, "left");
                                warningDetailLabel.elem.style.transform = "scale(1)";
                            });

                            // Hide warningDetailLabel
                            warningLabel.on("mouseout", function() {
                                warningDetailLabel.opacity = 0;
                                warningDetailLabel.elem.style.transform = "scale(0.7)";
                            });

                        endAutoLayout(); // GROUP: Form send button

                    endAutoLayout(); // GROUP: Form Items

                endBox(); // Form container 

            endBox(); // Scrollable page container

            // SCROLL BAR: Scrollable page container
            scrollableBox.scrollBar = ScrollBar({
                scrollableBox: scrollableBox,
                bar_border: 0,
                bar_round: 2,
                bar_borderColor: "rgba(0, 0, 0, 1)",
                bar_width: 4,
                bar_mouseOverWidth: 4, //8
                bar_mouseOverColor: "#373836",
                bar_opacity: 0.4,
                bar_mouseOverOpacity: 0.9,
                bar_padding: 2,
                bar_color: "#373836",
                neverHide: 0,
                showDots: 1,
            });

            // WAITING: Create object 1 time.
            waiting = Waiting({
                animated: 1,
                //label: "Data Sending...<br><span style='font-size:16px'>Please a litle bit.</span>",
            });

            // GROUP: Sent Message
            sentMessageBox = AutoLayout({
                color: "white",
            });

                lblSentMessage = Label({
                    text: "Data sent successfully."
                });
                // Data could not be sent

            endAutoLayout();
            sentMessageBox.visible = 0;
            
            // on every edit, call checkForm()
            inputList.forEach((item) => {
                item.onEdit = function() {
                    checkForm();
                }
            });

            checkForm();
            pageResized();
            page.onResize(pageResized);

        };

        // On page resized call
        const pageResized = function() {

            page.fit(MIN_WIDTH);
            // NOTE: Page width will not be smaller than MIN_WIDTH but page.zoom (1) will start get smaller

            if (page.width < 550) { // (page.width < 550), (page.zoom < 1)
                nameGroup.flow = "vertical";
            } else {
                nameGroup.flow = "horizontal";
            }

            // Center form onResize
            formContainer.center("left");

        };

        // Give effects to a button
        const actionButtonEffect = function(btn) {

            btn.setMotion("filter 0.2s, transform 0.2s");

            btn.on("mouseover", function() {
                btn.elem.style.filter = "brightness(120%)";
            });

            btn.on("mouseout", function() {
                btn.elem.style.filter = "brightness(100%)";
            });

            btn.on("mousedown", function() {
                btn.elem.style.transform = "scale(0.95)";
                btn.elem.style.filter = "brightness(80%)";
                
                setTimeout(function(){
                    btn.elem.style.transform = "scale(1)";
                    btn.elem.style.filter = "brightness(120%)";
                }, 200);
            });

        };

        // Check the form and create warnings, active the send button
        const checkForm = function() {

            let warningCount = 0;
            let warningDetailMessage = "";

            inputList.forEach((item) => {
                //console.log(item.status);
                if (item.status !== 0) {
                    if (item.status == 1) {
                        warningDetailMessage += "<b>" + item.titleText + "</b> can't be empty<br>";
                    } else if (item.status == 2) {
                        warningDetailMessage += "<b>" + item.titleText + "</b> is not valid<br>";
                    }
                    warningCount++;
                }
            });

            warningDetailLabel.text = warningDetailMessage;

            if (warningCount > 0) {
                formBtn.clickable = 0;
                formBtn.elem.style.filter = "grayscale(100%)";
                warningLabel.text = warningCount + " missing " + ((warningCount == 1) ? "entry" : "entries");
                warningLabel.opacity = 1;
                warningLabel.clickable = 1;

            } else {
                warningLabel.opacity = 0;
                warningLabel.clickable = 0;
                formBtn.clickable = 1;
                formBtn.elem.style.filter = "grayscale(0%)";
            }

        };

        const sendData = function(formJSON, success, fail) {

            postJSON(SERVICE_URL, formJSON, function (err, response) {
                if (err) {
                    fail(err);
                } else {
                    success(response);
                }
            });

        };

        const createJSON = function() {

            const result = [];

            inputList.forEach((item) => {
                const itemData = {};
                itemData.key = item.key;
                itemData.type = item.type;
                itemData.titleText = item.titleText;
                itemData.inputValue = item.getInputValue();

                result.push(itemData);

            });

            return result;

        };

        const postJSON = function(url, data, callback) {

            const xhr = new XMLHttpRequest();
            xhr.open("POST", url);
            xhr.setRequestHeader("Content-Type", "application/json");

            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        try {
                            const result = JSON.parse(xhr.responseText);
                            callback(null, result); // Başarılı cevap
                        } catch (e) {
                            callback(new Error("Geçersiz JSON cevabı"));
                        }
                    } else {
                        callback(new Error(`HTTP Hatası: ${xhr.status}`));
                    }
                }
            };

            xhr.onerror = function () {
                callback(new Error("İstek gönderilirken bir hata oluştu."));
            };

            xhr.send(JSON.stringify(data));
            
        }
        

        </script>

    </head>
    <body>
        
        <!-- HTML content -->
        
    </body>
</html>